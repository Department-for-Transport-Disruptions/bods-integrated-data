on:
    pull_request_review:
        types: [submitted]

name: "Terraform Apply"

defaults:
    run:
        working-directory: ./terraform

permissions:
    id-token: write # This is required for aws oidc connection
    contents: read # This is required for actions/checkout.

env:
    TERRAFORM_VERSION: 1.6.6
    AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
    terraform_apply:
        strategy:
            matrix:
                stage: ["dev"]

        name: "Terraform Apply"
        runs-on: ubuntu-22.04
        if: github.event.review.state == 'APPROVED' && github.event.pull_request.base.ref == 'main'
        env:
            stage: ${{ matrix.stage }}

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node.js and cache
              uses: actions/setup-node@v4
              with:
                  node-version: "20.x"
                  cache: "pnpm"

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
                  aws-region: "eu-west-2"
                  role-session-name: GitHub-OIDC-TERRAFORM

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: ${{ env.TERRAFORM_VERSION }}

            - name: Terraform Init
              id: init
              run: terraform -chdir=$stage init

            - name: Build functions
              run: |
                  cd ../src
                  pnpm i
                  pnpm build-all

            - name: Terraform Plan
              id: plan
              run: terraform -chdir=$stage plan -input=false -no-color -out=tfplan

            - name: Terraform Apply
              if: steps.plan.outcome == 'success'
              id: apply
              run: terraform -chdir=$stage apply -input=false -no-color tfplan
