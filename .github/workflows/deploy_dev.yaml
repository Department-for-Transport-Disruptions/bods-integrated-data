on:
  pull_request:
  merge_group:

name: Deploy Dev

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout.

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  HUSKY: 0

jobs:
  commitlint:
    runs-on: ubuntu-22.04
    name: Lint commit
    if: github.event_name == 'merge_group'
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20.x"

    - uses: pnpm/action-setup@v3
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('src/pnpm-lock.yaml') }}
        restore-keys: |
            ${{ runner.os }}-pnpm-store-

    - name: Get pnpm store directory
      shell: bash
      run: |
        pnpm i

    - run: pnpm commitlint --last --verbose

  check_for_function_changes:
    uses: ./.github/workflows/get_directories_with_changes.yaml
    name: Get list of updated functions
    needs:
      - commitlint
    if: github.event_name == 'merge_group'
    with:
      path: "./src/functions"

  zip_functions:
    uses: ./.github/workflows/zip_function.yaml
    name: Zip updated functions
    if: github.event_name == 'merge_group' && needs.check_for_function_changes.outputs.changed_directories
    strategy:
      matrix: ${{fromJson(needs.check_for_function_changes.outputs.changed_directories)}}
    needs:
      - check_for_function_changes
    with:
      function_dir: ${{ matrix.dir }}

  check_for_task_changes:
    uses: ./.github/workflows/get_directories_with_changes.yaml
    name: Get list of updated tasks
    needs:
      - commitlint
    if: github.event_name == 'merge_group'
    with:
      path: "./src/tasks"

  # terraform_apply:
  #   uses: ./.github/workflows/terraform_apply.yaml
  #   name: Terraform Apply Dev
  #   needs:
  #     - check_for_function_changes
  #     - zip_functions
  #   if: github.event_name == 'merge_group' && always() && !cancelled() && needs.check_for_function_changes.result == 'success'
  #   with:
  #     environment: "dev"
  #     terraform_version: 1.6.6
  #     use_artifacts: true

  bump_tag:
    needs:
      - check_for_function_changes
      - check_for_task_changes
    name: Bump tag
    runs-on: ubuntu-22.04
    if: github.event_name == 'merge_group'
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
      changelog: ${{ steps.tag_version.outputs.changelog }}
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  ecr_push:
    uses: ./.github/workflows/ecr_push.yaml
    needs:
      - bump_tag
      - check_for_task_changes
    name: Push to ECR
    if: github.event_name == 'merge_group' && needs.check_for_task_changes.outputs.changed_directories
    strategy:
      matrix: ${{fromJson(needs.check_for_task_changes.outputs.changed_directories)}}
    with:
      tag: ${{ needs.bump_tag.outputs.tag }}
      task_name: ${{ matrix.dir }}
    secrets:
      oidc_role: ${{ secrets.AWS_OIDC_ROLE_SHARED_SERVICES }}


  run_integration_test:
    uses: ./.github/workflows/run_integration_tests.yaml
    name: Run Integration Tests - Dev
    needs:
      - ecr_push
      - bump_tag
    if: github.event_name == 'merge_group' && always() && !cancelled() && needs.bump_tag.result == 'success'
    with:
      environment: "dev"

  create_prerelease:
    needs:
      - run_integration_test
      - bump_tag
    name: Create pre-release
    runs-on: ubuntu-22.04
    if: github.event_name == 'merge_group'
    permissions:
      contents: write
    steps:
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.bump_tag.outputs.tag }}
          name: Release ${{ needs.bump_tag.outputs.tag }}
          body: ${{ needs.bump_tag.outputs.changelog }}
          prerelease: true
