name: Create draft release

env:
  TERRAFORM_VERSION: 1.6.6

on:
  workflow_dispatch:
    inputs:
      is_hotfix:
        type: boolean
        description: Create as hotfix draft release
jobs:
  check_for_function_changes:
    uses: ./.github/workflows/get_directories_with_changes.yaml
    name: Get list of updated functions
    with:
      path: "./src/functions"
      shared_code_path: "./src/shared"
      stage: prod

  zip_functions:
    uses: ./.github/workflows/zip_function.yaml
    name: Zip functions
    if: ${{ needs.check_for_function_changes.outputs.changed_directories }}
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.check_for_function_changes.outputs.changed_directories) }}
    needs:
      - check_for_function_changes
    with:
      function_dir: ${{ matrix.dir }}

  create_draft_release:
    runs-on: ubuntu-24.04
    name: ${{ inputs.is_hotfix && 'Create Hotfix Draft Release' || 'Create Draft Release' }}
    if: ${{ always() && !cancelled() && needs.check_for_function_changes.result == 'success' }}
    permissions:
      contents: write # This is required to create the release
      id-token: write # This is required for aws oidc connection
    environment: prod
    needs:
      - check_for_function_changes
      - zip_functions
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download zipped functions
        uses: actions/download-artifact@v4
        with:
          path: ./src/functions/dist
          merge-multiple: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Terraform init
        run: terraform -chdir=terraform/prod init

      - name: Terraform plan
        run: terraform -chdir=terraform/prod plan -lock-timeout=5m -input=false -no-color -out .planfile

      - name: Create formatted Terraform plan
        uses: borchero/terraform-plan-comment@v2
        with:
          token: ${{ github.token }}
          working-directory: ./terraform/prod
          planfile: .planfile
          skip-comment: true
        continue-on-error: true

      - name: Bump version
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}${{ inputs.is_hotfix && ' (hotfix)' || '' }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: true
