name: ECS Deploy

on:
  workflow_call:
    inputs:
      stage:
        type: string
        required: true
      task_name:
        type: string
        required: true
      image_uri:
        type: string
        required: true
      branch:
        type: string
        required: true
    secrets:
      AWS_OIDC_ROLE:
        required: true

jobs:
  deploy_ecs:
    runs-on: ubuntu-22.04
    name: Deploy ${{ inputs.task_name }} to ECS - ${{ inputs.stage }}
    env:
      stage: ${{ inputs.stage }}
    environment: ${{ inputs.stage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('src/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Deps
        run: make install-deps

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          aws-region: "eu-west-2"
          role-session-name: GitHub-OIDC

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition integrated-data-${{ inputs.task_name }} --query taskDefinition > task-definition.json

      - name: Update ECS task definition with new version
        id: task_def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ inputs.task_name }}
          image: ${{ inputs.image_uri }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task_def.outputs.task-definition }}
          service: "integrated-data-${{ inputs.task_name }}-service-${{ inputs.stage }}"
          cluster: "integrated-data-ecs-cluster-${{ inputs.stage }}"
          wait-for-service-stability: true
